//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace carrier_tape_records.TRService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JOBSPCSMASTER_ICOS_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class JOBSPCSMASTER_ICOS_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMFILEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HADLERFILEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ISACTIVEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JOBSPECNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JSREFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JSSEQNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UPDATEDONField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMFILE {
            get {
                return this.COMFILEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMFILEField, value) != true)) {
                    this.COMFILEField = value;
                    this.RaisePropertyChanged("COMFILE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD1 {
            get {
                return this.CUSTOMEFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD1Field, value) != true)) {
                    this.CUSTOMEFIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD2 {
            get {
                return this.CUSTOMEFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD2Field, value) != true)) {
                    this.CUSTOMEFIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD3 {
            get {
                return this.CUSTOMEFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD3Field, value) != true)) {
                    this.CUSTOMEFIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD4 {
            get {
                return this.CUSTOMEFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD4Field, value) != true)) {
                    this.CUSTOMEFIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD5 {
            get {
                return this.CUSTOMEFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD5Field, value) != true)) {
                    this.CUSTOMEFIELD5Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG1 {
            get {
                return this.CUSTOMEFLAG1Field;
            }
            set {
                if ((this.CUSTOMEFLAG1Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG2 {
            get {
                return this.CUSTOMEFLAG2Field;
            }
            set {
                if ((this.CUSTOMEFLAG2Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG3 {
            get {
                return this.CUSTOMEFLAG3Field;
            }
            set {
                if ((this.CUSTOMEFLAG3Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG4 {
            get {
                return this.CUSTOMEFLAG4Field;
            }
            set {
                if ((this.CUSTOMEFLAG4Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HADLERFILE {
            get {
                return this.HADLERFILEField;
            }
            set {
                if ((object.ReferenceEquals(this.HADLERFILEField, value) != true)) {
                    this.HADLERFILEField = value;
                    this.RaisePropertyChanged("HADLERFILE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ISACTIVE {
            get {
                return this.ISACTIVEField;
            }
            set {
                if ((this.ISACTIVEField.Equals(value) != true)) {
                    this.ISACTIVEField = value;
                    this.RaisePropertyChanged("ISACTIVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOBSPECNAME {
            get {
                return this.JOBSPECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOBSPECNAMEField, value) != true)) {
                    this.JOBSPECNAMEField = value;
                    this.RaisePropertyChanged("JOBSPECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JSREF {
            get {
                return this.JSREFField;
            }
            set {
                if ((this.JSREFField.Equals(value) != true)) {
                    this.JSREFField = value;
                    this.RaisePropertyChanged("JSREF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JSSEQNO {
            get {
                return this.JSSEQNOField;
            }
            set {
                if ((this.JSSEQNOField.Equals(value) != true)) {
                    this.JSSEQNOField = value;
                    this.RaisePropertyChanged("JSSEQNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARKS {
            get {
                return this.REMARKSField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKSField, value) != true)) {
                    this.REMARKSField = value;
                    this.RaisePropertyChanged("REMARKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEDBY {
            get {
                return this.UPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEDBYField, value) != true)) {
                    this.UPDATEDBYField = value;
                    this.RaisePropertyChanged("UPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDON {
            get {
                return this.UPDATEDONField;
            }
            set {
                if ((this.UPDATEDONField.Equals(value) != true)) {
                    this.UPDATEDONField = value;
                    this.RaisePropertyChanged("UPDATEDON");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JOBSPCMASTER_ICOS_PARAMS_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class JOBSPCMASTER_ICOS_PARAMS_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DELETEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DELETEDONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FILENAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FILEPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISFILEACTIVEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JSPSEQNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JSREFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARAMNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARAMSOURCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PARAMSTATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARAMSTATEVALUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARAMTYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARAMVALUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UPDATEDONField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD1 {
            get {
                return this.CUSTOMEFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD1Field, value) != true)) {
                    this.CUSTOMEFIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD2 {
            get {
                return this.CUSTOMEFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD2Field, value) != true)) {
                    this.CUSTOMEFIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD3 {
            get {
                return this.CUSTOMEFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD3Field, value) != true)) {
                    this.CUSTOMEFIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD4 {
            get {
                return this.CUSTOMEFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD4Field, value) != true)) {
                    this.CUSTOMEFIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD5 {
            get {
                return this.CUSTOMEFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD5Field, value) != true)) {
                    this.CUSTOMEFIELD5Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG1 {
            get {
                return this.CUSTOMEFLAG1Field;
            }
            set {
                if ((this.CUSTOMEFLAG1Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG2 {
            get {
                return this.CUSTOMEFLAG2Field;
            }
            set {
                if ((this.CUSTOMEFLAG2Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG3 {
            get {
                return this.CUSTOMEFLAG3Field;
            }
            set {
                if ((this.CUSTOMEFLAG3Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG4 {
            get {
                return this.CUSTOMEFLAG4Field;
            }
            set {
                if ((this.CUSTOMEFLAG4Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DELETEDBY {
            get {
                return this.DELETEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.DELETEDBYField, value) != true)) {
                    this.DELETEDBYField = value;
                    this.RaisePropertyChanged("DELETEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DELETEDON {
            get {
                return this.DELETEDONField;
            }
            set {
                if ((this.DELETEDONField.Equals(value) != true)) {
                    this.DELETEDONField = value;
                    this.RaisePropertyChanged("DELETEDON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FILENAME {
            get {
                return this.FILENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FILENAMEField, value) != true)) {
                    this.FILENAMEField = value;
                    this.RaisePropertyChanged("FILENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FILEPATH {
            get {
                return this.FILEPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.FILEPATHField, value) != true)) {
                    this.FILEPATHField = value;
                    this.RaisePropertyChanged("FILEPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISFILEACTIVE {
            get {
                return this.ISFILEACTIVEField;
            }
            set {
                if ((this.ISFILEACTIVEField.Equals(value) != true)) {
                    this.ISFILEACTIVEField = value;
                    this.RaisePropertyChanged("ISFILEACTIVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JSPSEQNO {
            get {
                return this.JSPSEQNOField;
            }
            set {
                if ((this.JSPSEQNOField.Equals(value) != true)) {
                    this.JSPSEQNOField = value;
                    this.RaisePropertyChanged("JSPSEQNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JSREF {
            get {
                return this.JSREFField;
            }
            set {
                if ((this.JSREFField.Equals(value) != true)) {
                    this.JSREFField = value;
                    this.RaisePropertyChanged("JSREF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARAMNAME {
            get {
                return this.PARAMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARAMNAMEField, value) != true)) {
                    this.PARAMNAMEField = value;
                    this.RaisePropertyChanged("PARAMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARAMSOURCE {
            get {
                return this.PARAMSOURCEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARAMSOURCEField, value) != true)) {
                    this.PARAMSOURCEField = value;
                    this.RaisePropertyChanged("PARAMSOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PARAMSTATE {
            get {
                return this.PARAMSTATEField;
            }
            set {
                if ((this.PARAMSTATEField.Equals(value) != true)) {
                    this.PARAMSTATEField = value;
                    this.RaisePropertyChanged("PARAMSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARAMSTATEVALUE {
            get {
                return this.PARAMSTATEVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARAMSTATEVALUEField, value) != true)) {
                    this.PARAMSTATEVALUEField = value;
                    this.RaisePropertyChanged("PARAMSTATEVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARAMTYPE {
            get {
                return this.PARAMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARAMTYPEField, value) != true)) {
                    this.PARAMTYPEField = value;
                    this.RaisePropertyChanged("PARAMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARAMVALUE {
            get {
                return this.PARAMVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARAMVALUEField, value) != true)) {
                    this.PARAMVALUEField = value;
                    this.RaisePropertyChanged("PARAMVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARKS {
            get {
                return this.REMARKSField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKSField, value) != true)) {
                    this.REMARKSField = value;
                    this.RaisePropertyChanged("REMARKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEDBY {
            get {
                return this.UPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEDBYField, value) != true)) {
                    this.UPDATEDBYField = value;
                    this.RaisePropertyChanged("UPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDON {
            get {
                return this.UPDATEDONField;
            }
            set {
                if ((this.UPDATEDONField.Equals(value) != true)) {
                    this.UPDATEDONField = value;
                    this.RaisePropertyChanged("UPDATEDON");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JOBSPCSMASTER_ICOS_LINK_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class JOBSPCSMASTER_ICOS_LINK_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMEFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMEFLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ISACTIVEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JOBSPECNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JSLSEQNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> JSREFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KEYCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACHINEIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UPDATEDONField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD1 {
            get {
                return this.CUSTOMEFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD1Field, value) != true)) {
                    this.CUSTOMEFIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD2 {
            get {
                return this.CUSTOMEFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD2Field, value) != true)) {
                    this.CUSTOMEFIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD3 {
            get {
                return this.CUSTOMEFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD3Field, value) != true)) {
                    this.CUSTOMEFIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD4 {
            get {
                return this.CUSTOMEFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD4Field, value) != true)) {
                    this.CUSTOMEFIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMEFIELD5 {
            get {
                return this.CUSTOMEFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMEFIELD5Field, value) != true)) {
                    this.CUSTOMEFIELD5Field = value;
                    this.RaisePropertyChanged("CUSTOMEFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG1 {
            get {
                return this.CUSTOMEFLAG1Field;
            }
            set {
                if ((this.CUSTOMEFLAG1Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG2 {
            get {
                return this.CUSTOMEFLAG2Field;
            }
            set {
                if ((this.CUSTOMEFLAG2Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG3 {
            get {
                return this.CUSTOMEFLAG3Field;
            }
            set {
                if ((this.CUSTOMEFLAG3Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMEFLAG4 {
            get {
                return this.CUSTOMEFLAG4Field;
            }
            set {
                if ((this.CUSTOMEFLAG4Field.Equals(value) != true)) {
                    this.CUSTOMEFLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOMEFLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ISACTIVE {
            get {
                return this.ISACTIVEField;
            }
            set {
                if ((this.ISACTIVEField.Equals(value) != true)) {
                    this.ISACTIVEField = value;
                    this.RaisePropertyChanged("ISACTIVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOBSPECNAME {
            get {
                return this.JOBSPECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOBSPECNAMEField, value) != true)) {
                    this.JOBSPECNAMEField = value;
                    this.RaisePropertyChanged("JOBSPECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JSLSEQNO {
            get {
                return this.JSLSEQNOField;
            }
            set {
                if ((this.JSLSEQNOField.Equals(value) != true)) {
                    this.JSLSEQNOField = value;
                    this.RaisePropertyChanged("JSLSEQNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> JSREF {
            get {
                return this.JSREFField;
            }
            set {
                if ((this.JSREFField.Equals(value) != true)) {
                    this.JSREFField = value;
                    this.RaisePropertyChanged("JSREF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYCODE {
            get {
                return this.KEYCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYCODEField, value) != true)) {
                    this.KEYCODEField = value;
                    this.RaisePropertyChanged("KEYCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACHINEID {
            get {
                return this.MACHINEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MACHINEIDField, value) != true)) {
                    this.MACHINEIDField = value;
                    this.RaisePropertyChanged("MACHINEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARKS {
            get {
                return this.REMARKSField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKSField, value) != true)) {
                    this.REMARKSField = value;
                    this.RaisePropertyChanged("REMARKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEDBY {
            get {
                return this.UPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEDBYField, value) != true)) {
                    this.UPDATEDBYField = value;
                    this.RaisePropertyChanged("UPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDON {
            get {
                return this.UPDATEDONField;
            }
            set {
                if ((this.UPDATEDONField.Equals(value) != true)) {
                    this.UPDATEDONField = value;
                    this.RaisePropertyChanged("UPDATEDON");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MMARK_VERIFICATION_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class MMARK_VERIFICATION_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOM_FIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOM_FIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOM_FIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOM_FIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOM_FLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOM_FLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOM_FLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOM_FLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ENDLOTVERDURATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDLOTVERIFIEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ENDLOTVERIFIEDONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISENDLOTVERIFIEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISJSDOWNLOADEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISMARKINGVERFIEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISQABUYOFFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISREADYTOPACKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JSDOWNLOADEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JSDOWNLOADEDONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MMVSeqIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> QAVERDURATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QAVERIFIEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> QAVERIFIEDONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VERIFIEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VERIFIEDONField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOM_FIELD1 {
            get {
                return this.CUSTOM_FIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOM_FIELD1Field, value) != true)) {
                    this.CUSTOM_FIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOM_FIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOM_FIELD2 {
            get {
                return this.CUSTOM_FIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOM_FIELD2Field, value) != true)) {
                    this.CUSTOM_FIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOM_FIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOM_FIELD3 {
            get {
                return this.CUSTOM_FIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOM_FIELD3Field, value) != true)) {
                    this.CUSTOM_FIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOM_FIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOM_FIELD4 {
            get {
                return this.CUSTOM_FIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOM_FIELD4Field, value) != true)) {
                    this.CUSTOM_FIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOM_FIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOM_FLAG1 {
            get {
                return this.CUSTOM_FLAG1Field;
            }
            set {
                if ((this.CUSTOM_FLAG1Field.Equals(value) != true)) {
                    this.CUSTOM_FLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOM_FLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOM_FLAG2 {
            get {
                return this.CUSTOM_FLAG2Field;
            }
            set {
                if ((this.CUSTOM_FLAG2Field.Equals(value) != true)) {
                    this.CUSTOM_FLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOM_FLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOM_FLAG3 {
            get {
                return this.CUSTOM_FLAG3Field;
            }
            set {
                if ((this.CUSTOM_FLAG3Field.Equals(value) != true)) {
                    this.CUSTOM_FLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOM_FLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOM_FLAG4 {
            get {
                return this.CUSTOM_FLAG4Field;
            }
            set {
                if ((this.CUSTOM_FLAG4Field.Equals(value) != true)) {
                    this.CUSTOM_FLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOM_FLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ENDLOTVERDURATION {
            get {
                return this.ENDLOTVERDURATIONField;
            }
            set {
                if ((this.ENDLOTVERDURATIONField.Equals(value) != true)) {
                    this.ENDLOTVERDURATIONField = value;
                    this.RaisePropertyChanged("ENDLOTVERDURATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDLOTVERIFIEDBY {
            get {
                return this.ENDLOTVERIFIEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDLOTVERIFIEDBYField, value) != true)) {
                    this.ENDLOTVERIFIEDBYField = value;
                    this.RaisePropertyChanged("ENDLOTVERIFIEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ENDLOTVERIFIEDON {
            get {
                return this.ENDLOTVERIFIEDONField;
            }
            set {
                if ((this.ENDLOTVERIFIEDONField.Equals(value) != true)) {
                    this.ENDLOTVERIFIEDONField = value;
                    this.RaisePropertyChanged("ENDLOTVERIFIEDON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISENDLOTVERIFIED {
            get {
                return this.ISENDLOTVERIFIEDField;
            }
            set {
                if ((this.ISENDLOTVERIFIEDField.Equals(value) != true)) {
                    this.ISENDLOTVERIFIEDField = value;
                    this.RaisePropertyChanged("ISENDLOTVERIFIED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISJSDOWNLOADED {
            get {
                return this.ISJSDOWNLOADEDField;
            }
            set {
                if ((this.ISJSDOWNLOADEDField.Equals(value) != true)) {
                    this.ISJSDOWNLOADEDField = value;
                    this.RaisePropertyChanged("ISJSDOWNLOADED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISMARKINGVERFIED {
            get {
                return this.ISMARKINGVERFIEDField;
            }
            set {
                if ((this.ISMARKINGVERFIEDField.Equals(value) != true)) {
                    this.ISMARKINGVERFIEDField = value;
                    this.RaisePropertyChanged("ISMARKINGVERFIED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISQABUYOFF {
            get {
                return this.ISQABUYOFFField;
            }
            set {
                if ((this.ISQABUYOFFField.Equals(value) != true)) {
                    this.ISQABUYOFFField = value;
                    this.RaisePropertyChanged("ISQABUYOFF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISREADYTOPACK {
            get {
                return this.ISREADYTOPACKField;
            }
            set {
                if ((this.ISREADYTOPACKField.Equals(value) != true)) {
                    this.ISREADYTOPACKField = value;
                    this.RaisePropertyChanged("ISREADYTOPACK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JSDOWNLOADEDBY {
            get {
                return this.JSDOWNLOADEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.JSDOWNLOADEDBYField, value) != true)) {
                    this.JSDOWNLOADEDBYField = value;
                    this.RaisePropertyChanged("JSDOWNLOADEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JSDOWNLOADEDON {
            get {
                return this.JSDOWNLOADEDONField;
            }
            set {
                if ((this.JSDOWNLOADEDONField.Equals(value) != true)) {
                    this.JSDOWNLOADEDONField = value;
                    this.RaisePropertyChanged("JSDOWNLOADEDON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotID {
            get {
                return this.LotIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LotIDField, value) != true)) {
                    this.LotIDField = value;
                    this.RaisePropertyChanged("LotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MMVSeqID {
            get {
                return this.MMVSeqIDField;
            }
            set {
                if ((this.MMVSeqIDField.Equals(value) != true)) {
                    this.MMVSeqIDField = value;
                    this.RaisePropertyChanged("MMVSeqID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineIDField, value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> QAVERDURATION {
            get {
                return this.QAVERDURATIONField;
            }
            set {
                if ((this.QAVERDURATIONField.Equals(value) != true)) {
                    this.QAVERDURATIONField = value;
                    this.RaisePropertyChanged("QAVERDURATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QAVERIFIEDBY {
            get {
                return this.QAVERIFIEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.QAVERIFIEDBYField, value) != true)) {
                    this.QAVERIFIEDBYField = value;
                    this.RaisePropertyChanged("QAVERIFIEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> QAVERIFIEDON {
            get {
                return this.QAVERIFIEDONField;
            }
            set {
                if ((this.QAVERIFIEDONField.Equals(value) != true)) {
                    this.QAVERIFIEDONField = value;
                    this.RaisePropertyChanged("QAVERIFIEDON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VERIFIEDBY {
            get {
                return this.VERIFIEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.VERIFIEDBYField, value) != true)) {
                    this.VERIFIEDBYField = value;
                    this.RaisePropertyChanged("VERIFIEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VERIFIEDON {
            get {
                return this.VERIFIEDONField;
            }
            set {
                if ((this.VERIFIEDONField.Equals(value) != true)) {
                    this.VERIFIEDONField = value;
                    this.RaisePropertyChanged("VERIFIEDON");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JSDOWNLOAD_SUMMARY_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class JSDOWNLOAD_SUMMARY_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTLOTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierTapeBatch1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierTapeBatch2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierTapePartNo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierTapePartNo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTapeBatch1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTapeBatch2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTapePartNo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTapePartNo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Error_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISSPCFAILEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISSPCFAILRESOLVEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTaper1ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTaper2ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JSDOWNLOADSEQNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LotQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPCRESOUTIONCMNTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPECIALFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPECIALFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPECIALFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPECIALFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPECIALFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTLOTID {
            get {
                return this.CUSTLOTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTLOTIDField, value) != true)) {
                    this.CUSTLOTIDField = value;
                    this.RaisePropertyChanged("CUSTLOTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD1 {
            get {
                return this.CUSTOMFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD1Field, value) != true)) {
                    this.CUSTOMFIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD2 {
            get {
                return this.CUSTOMFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD2Field, value) != true)) {
                    this.CUSTOMFIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD3 {
            get {
                return this.CUSTOMFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD3Field, value) != true)) {
                    this.CUSTOMFIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD4 {
            get {
                return this.CUSTOMFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD4Field, value) != true)) {
                    this.CUSTOMFIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD5 {
            get {
                return this.CUSTOMFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD5Field, value) != true)) {
                    this.CUSTOMFIELD5Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG1 {
            get {
                return this.CUSTOMFLAG1Field;
            }
            set {
                if ((this.CUSTOMFLAG1Field.Equals(value) != true)) {
                    this.CUSTOMFLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG2 {
            get {
                return this.CUSTOMFLAG2Field;
            }
            set {
                if ((this.CUSTOMFLAG2Field.Equals(value) != true)) {
                    this.CUSTOMFLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG3 {
            get {
                return this.CUSTOMFLAG3Field;
            }
            set {
                if ((this.CUSTOMFLAG3Field.Equals(value) != true)) {
                    this.CUSTOMFLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG4 {
            get {
                return this.CUSTOMFLAG4Field;
            }
            set {
                if ((this.CUSTOMFLAG4Field.Equals(value) != true)) {
                    this.CUSTOMFLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierTapeBatch1 {
            get {
                return this.CarrierTapeBatch1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierTapeBatch1Field, value) != true)) {
                    this.CarrierTapeBatch1Field = value;
                    this.RaisePropertyChanged("CarrierTapeBatch1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierTapeBatch2 {
            get {
                return this.CarrierTapeBatch2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierTapeBatch2Field, value) != true)) {
                    this.CarrierTapeBatch2Field = value;
                    this.RaisePropertyChanged("CarrierTapeBatch2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierTapePartNo1 {
            get {
                return this.CarrierTapePartNo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierTapePartNo1Field, value) != true)) {
                    this.CarrierTapePartNo1Field = value;
                    this.RaisePropertyChanged("CarrierTapePartNo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierTapePartNo2 {
            get {
                return this.CarrierTapePartNo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierTapePartNo2Field, value) != true)) {
                    this.CarrierTapePartNo2Field = value;
                    this.RaisePropertyChanged("CarrierTapePartNo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTapeBatch1 {
            get {
                return this.CoverTapeBatch1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTapeBatch1Field, value) != true)) {
                    this.CoverTapeBatch1Field = value;
                    this.RaisePropertyChanged("CoverTapeBatch1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTapeBatch2 {
            get {
                return this.CoverTapeBatch2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTapeBatch2Field, value) != true)) {
                    this.CoverTapeBatch2Field = value;
                    this.RaisePropertyChanged("CoverTapeBatch2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTapePartNo1 {
            get {
                return this.CoverTapePartNo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTapePartNo1Field, value) != true)) {
                    this.CoverTapePartNo1Field = value;
                    this.RaisePropertyChanged("CoverTapePartNo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverTapePartNo2 {
            get {
                return this.CoverTapePartNo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTapePartNo2Field, value) != true)) {
                    this.CoverTapePartNo2Field = value;
                    this.RaisePropertyChanged("CoverTapePartNo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error_Code {
            get {
                return this.Error_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Error_CodeField, value) != true)) {
                    this.Error_CodeField = value;
                    this.RaisePropertyChanged("Error_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISSPCFAILED {
            get {
                return this.ISSPCFAILEDField;
            }
            set {
                if ((this.ISSPCFAILEDField.Equals(value) != true)) {
                    this.ISSPCFAILEDField = value;
                    this.RaisePropertyChanged("ISSPCFAILED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISSPCFAILRESOLVED {
            get {
                return this.ISSPCFAILRESOLVEDField;
            }
            set {
                if ((this.ISSPCFAILRESOLVEDField.Equals(value) != true)) {
                    this.ISSPCFAILRESOLVEDField = value;
                    this.RaisePropertyChanged("ISSPCFAILRESOLVED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTaper1Active {
            get {
                return this.IsTaper1ActiveField;
            }
            set {
                if ((this.IsTaper1ActiveField.Equals(value) != true)) {
                    this.IsTaper1ActiveField = value;
                    this.RaisePropertyChanged("IsTaper1Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTaper2Active {
            get {
                return this.IsTaper2ActiveField;
            }
            set {
                if ((this.IsTaper2ActiveField.Equals(value) != true)) {
                    this.IsTaper2ActiveField = value;
                    this.RaisePropertyChanged("IsTaper2Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JSDOWNLOADSEQNO {
            get {
                return this.JSDOWNLOADSEQNOField;
            }
            set {
                if ((this.JSDOWNLOADSEQNOField.Equals(value) != true)) {
                    this.JSDOWNLOADSEQNOField = value;
                    this.RaisePropertyChanged("JSDOWNLOADSEQNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyCode {
            get {
                return this.KeyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyCodeField, value) != true)) {
                    this.KeyCodeField = value;
                    this.RaisePropertyChanged("KeyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotID {
            get {
                return this.LotIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LotIDField, value) != true)) {
                    this.LotIDField = value;
                    this.RaisePropertyChanged("LotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LotQty {
            get {
                return this.LotQtyField;
            }
            set {
                if ((this.LotQtyField.Equals(value) != true)) {
                    this.LotQtyField = value;
                    this.RaisePropertyChanged("LotQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineIDField, value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackType {
            get {
                return this.PackTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackTypeField, value) != true)) {
                    this.PackTypeField = value;
                    this.RaisePropertyChanged("PackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefID {
            get {
                return this.RefIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RefIDField, value) != true)) {
                    this.RefIDField = value;
                    this.RaisePropertyChanged("RefID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestDuration {
            get {
                return this.RequestDurationField;
            }
            set {
                if ((this.RequestDurationField.Equals(value) != true)) {
                    this.RequestDurationField = value;
                    this.RaisePropertyChanged("RequestDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestStatus {
            get {
                return this.RequestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestStatusField, value) != true)) {
                    this.RequestStatusField = value;
                    this.RaisePropertyChanged("RequestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPCRESOUTIONCMNTS {
            get {
                return this.SPCRESOUTIONCMNTSField;
            }
            set {
                if ((object.ReferenceEquals(this.SPCRESOUTIONCMNTSField, value) != true)) {
                    this.SPCRESOUTIONCMNTSField = value;
                    this.RaisePropertyChanged("SPCRESOUTIONCMNTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPECIALFIELD1 {
            get {
                return this.SPECIALFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SPECIALFIELD1Field, value) != true)) {
                    this.SPECIALFIELD1Field = value;
                    this.RaisePropertyChanged("SPECIALFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPECIALFIELD2 {
            get {
                return this.SPECIALFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SPECIALFIELD2Field, value) != true)) {
                    this.SPECIALFIELD2Field = value;
                    this.RaisePropertyChanged("SPECIALFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPECIALFIELD3 {
            get {
                return this.SPECIALFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SPECIALFIELD3Field, value) != true)) {
                    this.SPECIALFIELD3Field = value;
                    this.RaisePropertyChanged("SPECIALFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPECIALFIELD4 {
            get {
                return this.SPECIALFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SPECIALFIELD4Field, value) != true)) {
                    this.SPECIALFIELD4Field = value;
                    this.RaisePropertyChanged("SPECIALFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPECIALFIELD5 {
            get {
                return this.SPECIALFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SPECIALFIELD5Field, value) != true)) {
                    this.SPECIALFIELD5Field = value;
                    this.RaisePropertyChanged("SPECIALFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOT_PARTIALQTY_VERIFICATION_DTO", Namespace="http://schemas.datacontract.org/2004/07/EOLDBService.TRServices")]
    [System.SerializableAttribute()]
    public partial class LOT_PARTIALQTY_VERIFICATION_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUSTOMFIELD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CUSTOMFLAG5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FULLTRYSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LOTQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKTYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTAYMAP1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTAYMAP2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTAYMAP3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTAYMAP4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTAYMAP5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PARTIALQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PARTIALTRAYSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QVALSEQIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RESULTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TRAYSIZEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UPDATEDONField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMER {
            get {
                return this.CUSTOMERField;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMERField, value) != true)) {
                    this.CUSTOMERField = value;
                    this.RaisePropertyChanged("CUSTOMER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD1 {
            get {
                return this.CUSTOMFIELD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD1Field, value) != true)) {
                    this.CUSTOMFIELD1Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD2 {
            get {
                return this.CUSTOMFIELD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD2Field, value) != true)) {
                    this.CUSTOMFIELD2Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD3 {
            get {
                return this.CUSTOMFIELD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD3Field, value) != true)) {
                    this.CUSTOMFIELD3Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD4 {
            get {
                return this.CUSTOMFIELD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD4Field, value) != true)) {
                    this.CUSTOMFIELD4Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMFIELD5 {
            get {
                return this.CUSTOMFIELD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMFIELD5Field, value) != true)) {
                    this.CUSTOMFIELD5Field = value;
                    this.RaisePropertyChanged("CUSTOMFIELD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG1 {
            get {
                return this.CUSTOMFLAG1Field;
            }
            set {
                if ((this.CUSTOMFLAG1Field.Equals(value) != true)) {
                    this.CUSTOMFLAG1Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG2 {
            get {
                return this.CUSTOMFLAG2Field;
            }
            set {
                if ((this.CUSTOMFLAG2Field.Equals(value) != true)) {
                    this.CUSTOMFLAG2Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG3 {
            get {
                return this.CUSTOMFLAG3Field;
            }
            set {
                if ((this.CUSTOMFLAG3Field.Equals(value) != true)) {
                    this.CUSTOMFLAG3Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG4 {
            get {
                return this.CUSTOMFLAG4Field;
            }
            set {
                if ((this.CUSTOMFLAG4Field.Equals(value) != true)) {
                    this.CUSTOMFLAG4Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CUSTOMFLAG5 {
            get {
                return this.CUSTOMFLAG5Field;
            }
            set {
                if ((this.CUSTOMFLAG5Field.Equals(value) != true)) {
                    this.CUSTOMFLAG5Field = value;
                    this.RaisePropertyChanged("CUSTOMFLAG5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FULLTRYS {
            get {
                return this.FULLTRYSField;
            }
            set {
                if ((this.FULLTRYSField.Equals(value) != true)) {
                    this.FULLTRYSField = value;
                    this.RaisePropertyChanged("FULLTRYS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOTID {
            get {
                return this.LOTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LOTIDField, value) != true)) {
                    this.LOTIDField = value;
                    this.RaisePropertyChanged("LOTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LOTQTY {
            get {
                return this.LOTQTYField;
            }
            set {
                if ((this.LOTQTYField.Equals(value) != true)) {
                    this.LOTQTYField = value;
                    this.RaisePropertyChanged("LOTQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKTYPE {
            get {
                return this.PACKTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKTYPEField, value) != true)) {
                    this.PACKTYPEField = value;
                    this.RaisePropertyChanged("PACKTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTAYMAP1 {
            get {
                return this.PARTAYMAP1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PARTAYMAP1Field, value) != true)) {
                    this.PARTAYMAP1Field = value;
                    this.RaisePropertyChanged("PARTAYMAP1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTAYMAP2 {
            get {
                return this.PARTAYMAP2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PARTAYMAP2Field, value) != true)) {
                    this.PARTAYMAP2Field = value;
                    this.RaisePropertyChanged("PARTAYMAP2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTAYMAP3 {
            get {
                return this.PARTAYMAP3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PARTAYMAP3Field, value) != true)) {
                    this.PARTAYMAP3Field = value;
                    this.RaisePropertyChanged("PARTAYMAP3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTAYMAP4 {
            get {
                return this.PARTAYMAP4Field;
            }
            set {
                if ((object.ReferenceEquals(this.PARTAYMAP4Field, value) != true)) {
                    this.PARTAYMAP4Field = value;
                    this.RaisePropertyChanged("PARTAYMAP4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTAYMAP5 {
            get {
                return this.PARTAYMAP5Field;
            }
            set {
                if ((object.ReferenceEquals(this.PARTAYMAP5Field, value) != true)) {
                    this.PARTAYMAP5Field = value;
                    this.RaisePropertyChanged("PARTAYMAP5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PARTIALQTY {
            get {
                return this.PARTIALQTYField;
            }
            set {
                if ((this.PARTIALQTYField.Equals(value) != true)) {
                    this.PARTIALQTYField = value;
                    this.RaisePropertyChanged("PARTIALQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PARTIALTRAYS {
            get {
                return this.PARTIALTRAYSField;
            }
            set {
                if ((this.PARTIALTRAYSField.Equals(value) != true)) {
                    this.PARTIALTRAYSField = value;
                    this.RaisePropertyChanged("PARTIALTRAYS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QVALSEQID {
            get {
                return this.QVALSEQIDField;
            }
            set {
                if ((this.QVALSEQIDField.Equals(value) != true)) {
                    this.QVALSEQIDField = value;
                    this.RaisePropertyChanged("QVALSEQID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RESULT {
            get {
                return this.RESULTField;
            }
            set {
                if ((this.RESULTField.Equals(value) != true)) {
                    this.RESULTField = value;
                    this.RaisePropertyChanged("RESULT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STAGE {
            get {
                return this.STAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.STAGEField, value) != true)) {
                    this.STAGEField = value;
                    this.RaisePropertyChanged("STAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRAYSIZE {
            get {
                return this.TRAYSIZEField;
            }
            set {
                if ((object.ReferenceEquals(this.TRAYSIZEField, value) != true)) {
                    this.TRAYSIZEField = value;
                    this.RaisePropertyChanged("TRAYSIZE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEDBY {
            get {
                return this.UPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEDBYField, value) != true)) {
                    this.UPDATEDBYField = value;
                    this.RaisePropertyChanged("UPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDON {
            get {
                return this.UPDATEDONField;
            }
            set {
                if ((this.UPDATEDONField.Equals(value) != true)) {
                    this.UPDATEDONField = value;
                    this.RaisePropertyChanged("UPDATEDON");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TRService.ITRService")]
    public interface ITRService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByJSNameResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO[] GetJSDetailsByJSName(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByJSNameResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO[]> GetJSDetailsByJSNameAsync(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetActiveJSNames", ReplyAction="http://tempuri.org/ITRService/GetActiveJSNamesResponse")]
        string[] GetActiveJSNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetActiveJSNames", ReplyAction="http://tempuri.org/ITRService/GetActiveJSNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetActiveJSNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSDetailByJSNameResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO GetJSDetailByJSName(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSDetailByJSNameResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO> GetJSDetailByJSNameAsync(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailByJSID", ReplyAction="http://tempuri.org/ITRService/GetJSDetailByJSIDResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO GetJSDetailByJSID(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailByJSID", ReplyAction="http://tempuri.org/ITRService/GetJSDetailByJSIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO> GetJSDetailByJSIDAsync(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSDetail", ReplyAction="http://tempuri.org/ITRService/AddJSDetailResponse")]
        string AddJSDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSDetail", ReplyAction="http://tempuri.org/ITRService/AddJSDetailResponse")]
        System.Threading.Tasks.Task<string> AddJSDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetail", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailResponse")]
        string UpdateJSDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetail", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailResponse")]
        System.Threading.Tasks.Task<string> UpdateJSDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSDetailResponse")]
        string RemoveJSDetail(string JSDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSDetailResponse")]
        System.Threading.Tasks.Task<string> RemoveJSDetailAsync(string JSDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetParamDetailsByJSRef", ReplyAction="http://tempuri.org/ITRService/GetParamDetailsByJSRefResponse")]
        carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] GetParamDetailsByJSRef(string JSRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetParamDetailsByJSRef", ReplyAction="http://tempuri.org/ITRService/GetParamDetailsByJSRefResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[]> GetParamDetailsByJSRefAsync(string JSRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetParamDetailByPID", ReplyAction="http://tempuri.org/ITRService/GetParamDetailByPIDResponse")]
        carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO GetParamDetailByPID(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetParamDetailByPID", ReplyAction="http://tempuri.org/ITRService/GetParamDetailByPIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO> GetParamDetailByPIDAsync(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSParamDetail", ReplyAction="http://tempuri.org/ITRService/AddJSParamDetailResponse")]
        string AddJSParamDetail(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO JSParamDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSParamDetail", ReplyAction="http://tempuri.org/ITRService/AddJSParamDetailResponse")]
        System.Threading.Tasks.Task<string> AddJSParamDetailAsync(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO JSParamDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSParamDetails", ReplyAction="http://tempuri.org/ITRService/AddJSParamDetailsResponse")]
        string AddJSParamDetails(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] JSParamDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSParamDetails", ReplyAction="http://tempuri.org/ITRService/AddJSParamDetailsResponse")]
        System.Threading.Tasks.Task<string> AddJSParamDetailsAsync(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] JSParamDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSParamDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSParamDetailResponse")]
        string RemoveJSParamDetail(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSParamDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSParamDetailResponse")]
        System.Threading.Tasks.Task<string> RemoveJSParamDetailAsync(int JSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailsByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailsByJSNameResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[] GetJSLinkDetailsByJSName(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailsByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailsByJSNameResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[]> GetJSLinkDetailsByJSNameAsync(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailsByMachine", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailsByMachineResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[] GetJSLinkDetailsByMachine(string Machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailsByMachine", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailsByMachineResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[]> GetJSLinkDetailsByMachineAsync(string Machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailByJSNameResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLinkDetailByJSName(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailByJSName", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailByJSNameResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLinkDetailByJSNameAsync(string JSName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailByKeyCode", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailByKeyCodeResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLinkDetailByKeyCode(string Keycode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLinkDetailByKeyCode", ReplyAction="http://tempuri.org/ITRService/GetJSLinkDetailByKeyCodeResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLinkDetailByKeyCodeAsync(string Keycode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLDetailByJSLID", ReplyAction="http://tempuri.org/ITRService/GetJSLDetailByJSLIDResponse")]
        carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLDetailByJSLID(int JSLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSLDetailByJSLID", ReplyAction="http://tempuri.org/ITRService/GetJSLDetailByJSLIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLDetailByJSLIDAsync(int JSLID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/AddJSLinkDetailResponse")]
        string AddJSLinkDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/AddJSLinkDetailResponse")]
        System.Threading.Tasks.Task<string> AddJSLinkDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/UpdateJSLinkDetailResponse")]
        string UpdateJSLinkDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/UpdateJSLinkDetailResponse")]
        System.Threading.Tasks.Task<string> UpdateJSLinkDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSLinkDetailResponse")]
        string RemoveJSLinkDetail(string JSLDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/RemoveJSLinkDetail", ReplyAction="http://tempuri.org/ITRService/RemoveJSLinkDetailResponse")]
        System.Threading.Tasks.Task<string> RemoveJSLinkDetailAsync(string JSLDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMorseForUTACLot", ReplyAction="http://tempuri.org/ITRService/GetMorseForUTACLotResponse")]
        carrier_tape_records.TRService.GetMorseForUTACLotResponse GetMorseForUTACLot(carrier_tape_records.TRService.GetMorseForUTACLotRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMorseForUTACLot", ReplyAction="http://tempuri.org/ITRService/GetMorseForUTACLotResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.GetMorseForUTACLotResponse> GetMorseForUTACLotAsync(carrier_tape_records.TRService.GetMorseForUTACLotRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMorseForDateCode", ReplyAction="http://tempuri.org/ITRService/GetMorseForDateCodeResponse")]
        carrier_tape_records.TRService.GetMorseForDateCodeResponse GetMorseForDateCode(carrier_tape_records.TRService.GetMorseForDateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMorseForDateCode", ReplyAction="http://tempuri.org/ITRService/GetMorseForDateCodeResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.GetMorseForDateCodeResponse> GetMorseForDateCodeAsync(carrier_tape_records.TRService.GetMorseForDateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMMDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetMMDetailsByLotIDResponse")]
        carrier_tape_records.TRService.MMARK_VERIFICATION_DTO[] GetMMDetailsByLotID(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMMDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetMMDetailsByLotIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.MMARK_VERIFICATION_DTO[]> GetMMDetailsByLotIDAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMMDetailByRefID", ReplyAction="http://tempuri.org/ITRService/GetMMDetailByRefIDResponse")]
        carrier_tape_records.TRService.MMARK_VERIFICATION_DTO GetMMDetailByRefID(string RefID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMMDetailByRefID", ReplyAction="http://tempuri.org/ITRService/GetMMDetailByRefIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.MMARK_VERIFICATION_DTO> GetMMDetailByRefIDAsync(string RefID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddMMDetail", ReplyAction="http://tempuri.org/ITRService/AddMMDetailResponse")]
        string AddMMDetail(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddMMDetail", ReplyAction="http://tempuri.org/ITRService/AddMMDetailResponse")]
        System.Threading.Tasks.Task<string> AddMMDetailAsync(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateMMDetail", ReplyAction="http://tempuri.org/ITRService/UpdateMMDetailResponse")]
        string UpdateMMDetail(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateMMDetail", ReplyAction="http://tempuri.org/ITRService/UpdateMMDetailResponse")]
        System.Threading.Tasks.Task<string> UpdateMMDetailAsync(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkVerified", ReplyAction="http://tempuri.org/ITRService/IsMMarkVerifiedResponse")]
        bool IsMMarkVerified(string LotID, string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkVerified", ReplyAction="http://tempuri.org/ITRService/IsMMarkVerifiedResponse")]
        System.Threading.Tasks.Task<bool> IsMMarkVerifiedAsync(string LotID, string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkEndLotVerified", ReplyAction="http://tempuri.org/ITRService/IsMMarkEndLotVerifiedResponse")]
        bool IsMMarkEndLotVerified(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkEndLotVerified", ReplyAction="http://tempuri.org/ITRService/IsMMarkEndLotVerifiedResponse")]
        System.Threading.Tasks.Task<bool> IsMMarkEndLotVerifiedAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkLotReadyToPack", ReplyAction="http://tempuri.org/ITRService/IsMMarkLotReadyToPackResponse")]
        bool IsMMarkLotReadyToPack(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMMarkLotReadyToPack", ReplyAction="http://tempuri.org/ITRService/IsMMarkLotReadyToPackResponse")]
        System.Threading.Tasks.Task<bool> IsMMarkLotReadyToPackAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsForPSI", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsForPSIResponse")]
        string[] GetJSDetailsForPSI(string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsForPSI", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsForPSIResponse")]
        System.Threading.Tasks.Task<string[]> GetJSDetailsForPSIAsync(string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetailForPSI", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailForPSIResponse")]
        string UpdateJSDetailForPSI(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetailForPSI", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailForPSIResponse")]
        System.Threading.Tasks.Task<string> UpdateJSDetailForPSIAsync(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetOpenedLotDetails", ReplyAction="http://tempuri.org/ITRService/GetOpenedLotDetailsResponse")]
        string[] GetOpenedLotDetails(string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetOpenedLotDetails", ReplyAction="http://tempuri.org/ITRService/GetOpenedLotDetailsResponse")]
        System.Threading.Tasks.Task<string[]> GetOpenedLotDetailsAsync(string MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetHEXAJSDLDetails", ReplyAction="http://tempuri.org/ITRService/GetHEXAJSDLDetailsResponse")]
        string[] GetHEXAJSDLDetails(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetHEXAJSDLDetails", ReplyAction="http://tempuri.org/ITRService/GetHEXAJSDLDetailsResponse")]
        System.Threading.Tasks.Task<string[]> GetHEXAJSDLDetailsAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMachineDetails", ReplyAction="http://tempuri.org/ITRService/GetMachineDetailsResponse")]
        string GetMachineDetails(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetMachineDetails", ReplyAction="http://tempuri.org/ITRService/GetMachineDetailsResponse")]
        System.Threading.Tasks.Task<string> GetMachineDetailsAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMETControledLot", ReplyAction="http://tempuri.org/ITRService/IsMETControledLotResponse")]
        bool IsMETControledLot(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsMETControledLot", ReplyAction="http://tempuri.org/ITRService/IsMETControledLotResponse")]
        System.Threading.Tasks.Task<bool> IsMETControledLotAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetailForVMBS", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailForVMBSResponse")]
        string UpdateJSDetailForVMBS(string MachineID, string LotID, bool IsProgress, bool IsMerge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateJSDetailForVMBS", ReplyAction="http://tempuri.org/ITRService/UpdateJSDetailForVMBSResponse")]
        System.Threading.Tasks.Task<string> UpdateJSDetailForVMBSAsync(string MachineID, string LotID, bool IsProgress, bool IsMerge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsPartialReelAllowedToPack", ReplyAction="http://tempuri.org/ITRService/IsPartialReelAllowedToPackResponse")]
        string IsPartialReelAllowedToPack(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/IsPartialReelAllowedToPack", ReplyAction="http://tempuri.org/ITRService/IsPartialReelAllowedToPackResponse")]
        System.Threading.Tasks.Task<string> IsPartialReelAllowedToPackAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AbortJSDetailForVMBS", ReplyAction="http://tempuri.org/ITRService/AbortJSDetailForVMBSResponse")]
        string AbortJSDetailForVMBS(string MachineID, string LotID, string Details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AbortJSDetailForVMBS", ReplyAction="http://tempuri.org/ITRService/AbortJSDetailForVMBSResponse")]
        System.Threading.Tasks.Task<string> AbortJSDetailForVMBSAsync(string MachineID, string LotID, string Details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanOpenReelJobSpec", ReplyAction="http://tempuri.org/ITRService/CanOpenReelJobSpecResponse")]
        string CanOpenReelJobSpec(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanOpenReelJobSpec", ReplyAction="http://tempuri.org/ITRService/CanOpenReelJobSpecResponse")]
        System.Threading.Tasks.Task<string> CanOpenReelJobSpecAsync(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanOpenTrayJobSpec", ReplyAction="http://tempuri.org/ITRService/CanOpenTrayJobSpecResponse")]
        string CanOpenTrayJobSpec(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanOpenTrayJobSpec", ReplyAction="http://tempuri.org/ITRService/CanOpenTrayJobSpecResponse")]
        System.Threading.Tasks.Task<string> CanOpenTrayJobSpecAsync(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanAllowedToDownloadJobSpec", ReplyAction="http://tempuri.org/ITRService/CanAllowedToDownloadJobSpecResponse")]
        string CanAllowedToDownloadJobSpec(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/CanAllowedToDownloadJobSpec", ReplyAction="http://tempuri.org/ITRService/CanAllowedToDownloadJobSpecResponse")]
        System.Threading.Tasks.Task<string> CanAllowedToDownloadJobSpecAsync(string MachineID, string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetStagesOfLot", ReplyAction="http://tempuri.org/ITRService/GetStagesOfLotResponse")]
        carrier_tape_records.TRService.GetStagesOfLotResponse GetStagesOfLot(carrier_tape_records.TRService.GetStagesOfLotRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetStagesOfLot", ReplyAction="http://tempuri.org/ITRService/GetStagesOfLotResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.GetStagesOfLotResponse> GetStagesOfLotAsync(carrier_tape_records.TRService.GetStagesOfLotRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByKeyCodeForOEE", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByKeyCodeForOEEResponse")]
        carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEEResponse GetJSDetailsByKeyCodeForOEE(carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByKeyCodeForOEE", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByKeyCodeForOEEResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEEResponse> GetJSDetailsByKeyCodeForOEEAsync(carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByLotIDResponse")]
        carrier_tape_records.TRService.JSDOWNLOAD_SUMMARY_DTO[] GetJSDetailsByLotID(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetJSDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetJSDetailsByLotIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.JSDOWNLOAD_SUMMARY_DTO[]> GetJSDetailsByLotIDAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddPLVDetail", ReplyAction="http://tempuri.org/ITRService/AddPLVDetailResponse")]
        string AddPLVDetail(carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO LotDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/AddPLVDetail", ReplyAction="http://tempuri.org/ITRService/AddPLVDetailResponse")]
        System.Threading.Tasks.Task<string> AddPLVDetailAsync(carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO LotDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetPLVDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetPLVDetailsByLotIDResponse")]
        carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO[] GetPLVDetailsByLotID(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/GetPLVDetailsByLotID", ReplyAction="http://tempuri.org/ITRService/GetPLVDetailsByLotIDResponse")]
        System.Threading.Tasks.Task<carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO[]> GetPLVDetailsByLotIDAsync(string LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateEPSPackingDateforMV1", ReplyAction="http://tempuri.org/ITRService/UpdateEPSPackingDateforMV1Response")]
        string UpdateEPSPackingDateforMV1(string LotID, string UserID, System.DateTime PackDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRService/UpdateEPSPackingDateforMV1", ReplyAction="http://tempuri.org/ITRService/UpdateEPSPackingDateforMV1Response")]
        System.Threading.Tasks.Task<string> UpdateEPSPackingDateforMV1Async(string LotID, string UserID, System.DateTime PackDate);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMorseForUTACLot", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMorseForUTACLotRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LotID;
        
        public GetMorseForUTACLotRequest() {
        }
        
        public GetMorseForUTACLotRequest(string LotID) {
            this.LotID = LotID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMorseForUTACLotResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMorseForUTACLotResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetMorseForUTACLotResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] TopSideMorse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] RightSideMorse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string LotDC;
        
        public GetMorseForUTACLotResponse() {
        }
        
        public GetMorseForUTACLotResponse(string GetMorseForUTACLotResult, string[] TopSideMorse, string[] RightSideMorse, string LotDC) {
            this.GetMorseForUTACLotResult = GetMorseForUTACLotResult;
            this.TopSideMorse = TopSideMorse;
            this.RightSideMorse = RightSideMorse;
            this.LotDC = LotDC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMorseForDateCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMorseForDateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string DateCode;
        
        public GetMorseForDateCodeRequest() {
        }
        
        public GetMorseForDateCodeRequest(string DateCode) {
            this.DateCode = DateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMorseForDateCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMorseForDateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetMorseForDateCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] TopSideMorse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] RightSideMorse;
        
        public GetMorseForDateCodeResponse() {
        }
        
        public GetMorseForDateCodeResponse(string GetMorseForDateCodeResult, string[] TopSideMorse, string[] RightSideMorse) {
            this.GetMorseForDateCodeResult = GetMorseForDateCodeResult;
            this.TopSideMorse = TopSideMorse;
            this.RightSideMorse = RightSideMorse;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStagesOfLot", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStagesOfLotRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LotID;
        
        public GetStagesOfLotRequest() {
        }
        
        public GetStagesOfLotRequest(string LotID) {
            this.LotID = LotID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStagesOfLotResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStagesOfLotResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] GetStagesOfLotResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMsg;
        
        public GetStagesOfLotResponse() {
        }
        
        public GetStagesOfLotResponse(string[] GetStagesOfLotResult, string ErrorMsg) {
            this.GetStagesOfLotResult = GetStagesOfLotResult;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJSDetailsByKeyCodeForOEE", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetJSDetailsByKeyCodeForOEERequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string KeyCode;
        
        public GetJSDetailsByKeyCodeForOEERequest() {
        }
        
        public GetJSDetailsByKeyCodeForOEERequest(string KeyCode) {
            this.KeyCode = KeyCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJSDetailsByKeyCodeForOEEResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetJSDetailsByKeyCodeForOEEResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] GetJSDetailsByKeyCodeForOEEResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMsg;
        
        public GetJSDetailsByKeyCodeForOEEResponse() {
        }
        
        public GetJSDetailsByKeyCodeForOEEResponse(string[] GetJSDetailsByKeyCodeForOEEResult, string ErrorMsg) {
            this.GetJSDetailsByKeyCodeForOEEResult = GetJSDetailsByKeyCodeForOEEResult;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITRServiceChannel : carrier_tape_records.TRService.ITRService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TRServiceClient : System.ServiceModel.ClientBase<carrier_tape_records.TRService.ITRService>, carrier_tape_records.TRService.ITRService {
        
        public TRServiceClient() {
        }
        
        public TRServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TRServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TRServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TRServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO[] GetJSDetailsByJSName(string JSName) {
            return base.Channel.GetJSDetailsByJSName(JSName);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO[]> GetJSDetailsByJSNameAsync(string JSName) {
            return base.Channel.GetJSDetailsByJSNameAsync(JSName);
        }
        
        public string[] GetActiveJSNames() {
            return base.Channel.GetActiveJSNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetActiveJSNamesAsync() {
            return base.Channel.GetActiveJSNamesAsync();
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO GetJSDetailByJSName(string JSName) {
            return base.Channel.GetJSDetailByJSName(JSName);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO> GetJSDetailByJSNameAsync(string JSName) {
            return base.Channel.GetJSDetailByJSNameAsync(JSName);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO GetJSDetailByJSID(int JSID) {
            return base.Channel.GetJSDetailByJSID(JSID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO> GetJSDetailByJSIDAsync(int JSID) {
            return base.Channel.GetJSDetailByJSIDAsync(JSID);
        }
        
        public string AddJSDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail) {
            return base.Channel.AddJSDetail(JSDetail);
        }
        
        public System.Threading.Tasks.Task<string> AddJSDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail) {
            return base.Channel.AddJSDetailAsync(JSDetail);
        }
        
        public string UpdateJSDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail) {
            return base.Channel.UpdateJSDetail(JSDetail);
        }
        
        public System.Threading.Tasks.Task<string> UpdateJSDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_DTO JSDetail) {
            return base.Channel.UpdateJSDetailAsync(JSDetail);
        }
        
        public string RemoveJSDetail(string JSDetailID) {
            return base.Channel.RemoveJSDetail(JSDetailID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveJSDetailAsync(string JSDetailID) {
            return base.Channel.RemoveJSDetailAsync(JSDetailID);
        }
        
        public carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] GetParamDetailsByJSRef(string JSRef) {
            return base.Channel.GetParamDetailsByJSRef(JSRef);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[]> GetParamDetailsByJSRefAsync(string JSRef) {
            return base.Channel.GetParamDetailsByJSRefAsync(JSRef);
        }
        
        public carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO GetParamDetailByPID(int JSID) {
            return base.Channel.GetParamDetailByPID(JSID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO> GetParamDetailByPIDAsync(int JSID) {
            return base.Channel.GetParamDetailByPIDAsync(JSID);
        }
        
        public string AddJSParamDetail(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO JSParamDetail) {
            return base.Channel.AddJSParamDetail(JSParamDetail);
        }
        
        public System.Threading.Tasks.Task<string> AddJSParamDetailAsync(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO JSParamDetail) {
            return base.Channel.AddJSParamDetailAsync(JSParamDetail);
        }
        
        public string AddJSParamDetails(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] JSParamDetails) {
            return base.Channel.AddJSParamDetails(JSParamDetails);
        }
        
        public System.Threading.Tasks.Task<string> AddJSParamDetailsAsync(carrier_tape_records.TRService.JOBSPCMASTER_ICOS_PARAMS_DTO[] JSParamDetails) {
            return base.Channel.AddJSParamDetailsAsync(JSParamDetails);
        }
        
        public string RemoveJSParamDetail(int JSID) {
            return base.Channel.RemoveJSParamDetail(JSID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveJSParamDetailAsync(int JSID) {
            return base.Channel.RemoveJSParamDetailAsync(JSID);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[] GetJSLinkDetailsByJSName(string JSName) {
            return base.Channel.GetJSLinkDetailsByJSName(JSName);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[]> GetJSLinkDetailsByJSNameAsync(string JSName) {
            return base.Channel.GetJSLinkDetailsByJSNameAsync(JSName);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[] GetJSLinkDetailsByMachine(string Machine) {
            return base.Channel.GetJSLinkDetailsByMachine(Machine);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO[]> GetJSLinkDetailsByMachineAsync(string Machine) {
            return base.Channel.GetJSLinkDetailsByMachineAsync(Machine);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLinkDetailByJSName(string JSName) {
            return base.Channel.GetJSLinkDetailByJSName(JSName);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLinkDetailByJSNameAsync(string JSName) {
            return base.Channel.GetJSLinkDetailByJSNameAsync(JSName);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLinkDetailByKeyCode(string Keycode) {
            return base.Channel.GetJSLinkDetailByKeyCode(Keycode);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLinkDetailByKeyCodeAsync(string Keycode) {
            return base.Channel.GetJSLinkDetailByKeyCodeAsync(Keycode);
        }
        
        public carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO GetJSLDetailByJSLID(int JSLID) {
            return base.Channel.GetJSLDetailByJSLID(JSLID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO> GetJSLDetailByJSLIDAsync(int JSLID) {
            return base.Channel.GetJSLDetailByJSLIDAsync(JSLID);
        }
        
        public string AddJSLinkDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail) {
            return base.Channel.AddJSLinkDetail(JSLinkDetail);
        }
        
        public System.Threading.Tasks.Task<string> AddJSLinkDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail) {
            return base.Channel.AddJSLinkDetailAsync(JSLinkDetail);
        }
        
        public string UpdateJSLinkDetail(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail) {
            return base.Channel.UpdateJSLinkDetail(JSLinkDetail);
        }
        
        public System.Threading.Tasks.Task<string> UpdateJSLinkDetailAsync(carrier_tape_records.TRService.JOBSPCSMASTER_ICOS_LINK_DTO JSLinkDetail) {
            return base.Channel.UpdateJSLinkDetailAsync(JSLinkDetail);
        }
        
        public string RemoveJSLinkDetail(string JSLDetailID) {
            return base.Channel.RemoveJSLinkDetail(JSLDetailID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveJSLinkDetailAsync(string JSLDetailID) {
            return base.Channel.RemoveJSLinkDetailAsync(JSLDetailID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        carrier_tape_records.TRService.GetMorseForUTACLotResponse carrier_tape_records.TRService.ITRService.GetMorseForUTACLot(carrier_tape_records.TRService.GetMorseForUTACLotRequest request) {
            return base.Channel.GetMorseForUTACLot(request);
        }
        
        public string GetMorseForUTACLot(string LotID, out string[] TopSideMorse, out string[] RightSideMorse, out string LotDC) {
            carrier_tape_records.TRService.GetMorseForUTACLotRequest inValue = new carrier_tape_records.TRService.GetMorseForUTACLotRequest();
            inValue.LotID = LotID;
            carrier_tape_records.TRService.GetMorseForUTACLotResponse retVal = ((carrier_tape_records.TRService.ITRService)(this)).GetMorseForUTACLot(inValue);
            TopSideMorse = retVal.TopSideMorse;
            RightSideMorse = retVal.RightSideMorse;
            LotDC = retVal.LotDC;
            return retVal.GetMorseForUTACLotResult;
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.GetMorseForUTACLotResponse> GetMorseForUTACLotAsync(carrier_tape_records.TRService.GetMorseForUTACLotRequest request) {
            return base.Channel.GetMorseForUTACLotAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        carrier_tape_records.TRService.GetMorseForDateCodeResponse carrier_tape_records.TRService.ITRService.GetMorseForDateCode(carrier_tape_records.TRService.GetMorseForDateCodeRequest request) {
            return base.Channel.GetMorseForDateCode(request);
        }
        
        public string GetMorseForDateCode(string DateCode, out string[] TopSideMorse, out string[] RightSideMorse) {
            carrier_tape_records.TRService.GetMorseForDateCodeRequest inValue = new carrier_tape_records.TRService.GetMorseForDateCodeRequest();
            inValue.DateCode = DateCode;
            carrier_tape_records.TRService.GetMorseForDateCodeResponse retVal = ((carrier_tape_records.TRService.ITRService)(this)).GetMorseForDateCode(inValue);
            TopSideMorse = retVal.TopSideMorse;
            RightSideMorse = retVal.RightSideMorse;
            return retVal.GetMorseForDateCodeResult;
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.GetMorseForDateCodeResponse> GetMorseForDateCodeAsync(carrier_tape_records.TRService.GetMorseForDateCodeRequest request) {
            return base.Channel.GetMorseForDateCodeAsync(request);
        }
        
        public carrier_tape_records.TRService.MMARK_VERIFICATION_DTO[] GetMMDetailsByLotID(string LotID) {
            return base.Channel.GetMMDetailsByLotID(LotID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.MMARK_VERIFICATION_DTO[]> GetMMDetailsByLotIDAsync(string LotID) {
            return base.Channel.GetMMDetailsByLotIDAsync(LotID);
        }
        
        public carrier_tape_records.TRService.MMARK_VERIFICATION_DTO GetMMDetailByRefID(string RefID) {
            return base.Channel.GetMMDetailByRefID(RefID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.MMARK_VERIFICATION_DTO> GetMMDetailByRefIDAsync(string RefID) {
            return base.Channel.GetMMDetailByRefIDAsync(RefID);
        }
        
        public string AddMMDetail(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail) {
            return base.Channel.AddMMDetail(MMDetail);
        }
        
        public System.Threading.Tasks.Task<string> AddMMDetailAsync(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail) {
            return base.Channel.AddMMDetailAsync(MMDetail);
        }
        
        public string UpdateMMDetail(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail) {
            return base.Channel.UpdateMMDetail(MMDetail);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMMDetailAsync(carrier_tape_records.TRService.MMARK_VERIFICATION_DTO MMDetail) {
            return base.Channel.UpdateMMDetailAsync(MMDetail);
        }
        
        public bool IsMMarkVerified(string LotID, string MachineID) {
            return base.Channel.IsMMarkVerified(LotID, MachineID);
        }
        
        public System.Threading.Tasks.Task<bool> IsMMarkVerifiedAsync(string LotID, string MachineID) {
            return base.Channel.IsMMarkVerifiedAsync(LotID, MachineID);
        }
        
        public bool IsMMarkEndLotVerified(string LotID) {
            return base.Channel.IsMMarkEndLotVerified(LotID);
        }
        
        public System.Threading.Tasks.Task<bool> IsMMarkEndLotVerifiedAsync(string LotID) {
            return base.Channel.IsMMarkEndLotVerifiedAsync(LotID);
        }
        
        public bool IsMMarkLotReadyToPack(string LotID) {
            return base.Channel.IsMMarkLotReadyToPack(LotID);
        }
        
        public System.Threading.Tasks.Task<bool> IsMMarkLotReadyToPackAsync(string LotID) {
            return base.Channel.IsMMarkLotReadyToPackAsync(LotID);
        }
        
        public string[] GetJSDetailsForPSI(string MachineID) {
            return base.Channel.GetJSDetailsForPSI(MachineID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetJSDetailsForPSIAsync(string MachineID) {
            return base.Channel.GetJSDetailsForPSIAsync(MachineID);
        }
        
        public string UpdateJSDetailForPSI(string MachineID, string LotID) {
            return base.Channel.UpdateJSDetailForPSI(MachineID, LotID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateJSDetailForPSIAsync(string MachineID, string LotID) {
            return base.Channel.UpdateJSDetailForPSIAsync(MachineID, LotID);
        }
        
        public string[] GetOpenedLotDetails(string MachineID) {
            return base.Channel.GetOpenedLotDetails(MachineID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetOpenedLotDetailsAsync(string MachineID) {
            return base.Channel.GetOpenedLotDetailsAsync(MachineID);
        }
        
        public string[] GetHEXAJSDLDetails(string LotID) {
            return base.Channel.GetHEXAJSDLDetails(LotID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetHEXAJSDLDetailsAsync(string LotID) {
            return base.Channel.GetHEXAJSDLDetailsAsync(LotID);
        }
        
        public string GetMachineDetails(string LotID) {
            return base.Channel.GetMachineDetails(LotID);
        }
        
        public System.Threading.Tasks.Task<string> GetMachineDetailsAsync(string LotID) {
            return base.Channel.GetMachineDetailsAsync(LotID);
        }
        
        public bool IsMETControledLot(string LotID) {
            return base.Channel.IsMETControledLot(LotID);
        }
        
        public System.Threading.Tasks.Task<bool> IsMETControledLotAsync(string LotID) {
            return base.Channel.IsMETControledLotAsync(LotID);
        }
        
        public string UpdateJSDetailForVMBS(string MachineID, string LotID, bool IsProgress, bool IsMerge) {
            return base.Channel.UpdateJSDetailForVMBS(MachineID, LotID, IsProgress, IsMerge);
        }
        
        public System.Threading.Tasks.Task<string> UpdateJSDetailForVMBSAsync(string MachineID, string LotID, bool IsProgress, bool IsMerge) {
            return base.Channel.UpdateJSDetailForVMBSAsync(MachineID, LotID, IsProgress, IsMerge);
        }
        
        public string IsPartialReelAllowedToPack(string LotID) {
            return base.Channel.IsPartialReelAllowedToPack(LotID);
        }
        
        public System.Threading.Tasks.Task<string> IsPartialReelAllowedToPackAsync(string LotID) {
            return base.Channel.IsPartialReelAllowedToPackAsync(LotID);
        }
        
        public string AbortJSDetailForVMBS(string MachineID, string LotID, string Details) {
            return base.Channel.AbortJSDetailForVMBS(MachineID, LotID, Details);
        }
        
        public System.Threading.Tasks.Task<string> AbortJSDetailForVMBSAsync(string MachineID, string LotID, string Details) {
            return base.Channel.AbortJSDetailForVMBSAsync(MachineID, LotID, Details);
        }
        
        public string CanOpenReelJobSpec(string MachineID, string LotID) {
            return base.Channel.CanOpenReelJobSpec(MachineID, LotID);
        }
        
        public System.Threading.Tasks.Task<string> CanOpenReelJobSpecAsync(string MachineID, string LotID) {
            return base.Channel.CanOpenReelJobSpecAsync(MachineID, LotID);
        }
        
        public string CanOpenTrayJobSpec(string MachineID, string LotID) {
            return base.Channel.CanOpenTrayJobSpec(MachineID, LotID);
        }
        
        public System.Threading.Tasks.Task<string> CanOpenTrayJobSpecAsync(string MachineID, string LotID) {
            return base.Channel.CanOpenTrayJobSpecAsync(MachineID, LotID);
        }
        
        public string CanAllowedToDownloadJobSpec(string MachineID, string LotID) {
            return base.Channel.CanAllowedToDownloadJobSpec(MachineID, LotID);
        }
        
        public System.Threading.Tasks.Task<string> CanAllowedToDownloadJobSpecAsync(string MachineID, string LotID) {
            return base.Channel.CanAllowedToDownloadJobSpecAsync(MachineID, LotID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        carrier_tape_records.TRService.GetStagesOfLotResponse carrier_tape_records.TRService.ITRService.GetStagesOfLot(carrier_tape_records.TRService.GetStagesOfLotRequest request) {
            return base.Channel.GetStagesOfLot(request);
        }
        
        public string[] GetStagesOfLot(string LotID, out string ErrorMsg) {
            carrier_tape_records.TRService.GetStagesOfLotRequest inValue = new carrier_tape_records.TRService.GetStagesOfLotRequest();
            inValue.LotID = LotID;
            carrier_tape_records.TRService.GetStagesOfLotResponse retVal = ((carrier_tape_records.TRService.ITRService)(this)).GetStagesOfLot(inValue);
            ErrorMsg = retVal.ErrorMsg;
            return retVal.GetStagesOfLotResult;
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.GetStagesOfLotResponse> GetStagesOfLotAsync(carrier_tape_records.TRService.GetStagesOfLotRequest request) {
            return base.Channel.GetStagesOfLotAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEEResponse carrier_tape_records.TRService.ITRService.GetJSDetailsByKeyCodeForOEE(carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest request) {
            return base.Channel.GetJSDetailsByKeyCodeForOEE(request);
        }
        
        public string[] GetJSDetailsByKeyCodeForOEE(string KeyCode, out string ErrorMsg) {
            carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest inValue = new carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest();
            inValue.KeyCode = KeyCode;
            carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEEResponse retVal = ((carrier_tape_records.TRService.ITRService)(this)).GetJSDetailsByKeyCodeForOEE(inValue);
            ErrorMsg = retVal.ErrorMsg;
            return retVal.GetJSDetailsByKeyCodeForOEEResult;
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEEResponse> GetJSDetailsByKeyCodeForOEEAsync(carrier_tape_records.TRService.GetJSDetailsByKeyCodeForOEERequest request) {
            return base.Channel.GetJSDetailsByKeyCodeForOEEAsync(request);
        }
        
        public carrier_tape_records.TRService.JSDOWNLOAD_SUMMARY_DTO[] GetJSDetailsByLotID(string LotID) {
            return base.Channel.GetJSDetailsByLotID(LotID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.JSDOWNLOAD_SUMMARY_DTO[]> GetJSDetailsByLotIDAsync(string LotID) {
            return base.Channel.GetJSDetailsByLotIDAsync(LotID);
        }
        
        public string AddPLVDetail(carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO LotDetail) {
            return base.Channel.AddPLVDetail(LotDetail);
        }
        
        public System.Threading.Tasks.Task<string> AddPLVDetailAsync(carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO LotDetail) {
            return base.Channel.AddPLVDetailAsync(LotDetail);
        }
        
        public carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO[] GetPLVDetailsByLotID(string LotID) {
            return base.Channel.GetPLVDetailsByLotID(LotID);
        }
        
        public System.Threading.Tasks.Task<carrier_tape_records.TRService.LOT_PARTIALQTY_VERIFICATION_DTO[]> GetPLVDetailsByLotIDAsync(string LotID) {
            return base.Channel.GetPLVDetailsByLotIDAsync(LotID);
        }
        
        public string UpdateEPSPackingDateforMV1(string LotID, string UserID, System.DateTime PackDate) {
            return base.Channel.UpdateEPSPackingDateforMV1(LotID, UserID, PackDate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEPSPackingDateforMV1Async(string LotID, string UserID, System.DateTime PackDate) {
            return base.Channel.UpdateEPSPackingDateforMV1Async(LotID, UserID, PackDate);
        }
    }
}
